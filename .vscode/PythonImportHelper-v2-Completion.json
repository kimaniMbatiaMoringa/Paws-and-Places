[
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "SQLAlchemy",
        "importPath": "flask_sqlalchemy",
        "description": "flask_sqlalchemy",
        "isExtraImport": true,
        "detail": "flask_sqlalchemy",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "SerializerMixin",
        "importPath": "sqlalchemy_serializer",
        "description": "sqlalchemy_serializer",
        "isExtraImport": true,
        "detail": "sqlalchemy_serializer",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class User(db.Model, SerializerMixin):\n    __tablename__ = \"users\"\n    serialize_rules = \"-reviews.user\"\n    id = db.Column(db.Integer(), primary_key=True)\n    username = db.Column(db.String(250), nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(), nullable=False)\n    created_at = db.Column(db.DateTime(), default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime(), default=datetime.utcnow)\n    # one-to-many Relationship between Users and Reviews",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "DogHouse",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class DogHouse(db.Model, SerializerMixin):\n    __tablename__ = \"doghouses\"\n    serialize_rules = \"-reviews.doghouse\"\n    id = db.Column(db.Integer(), primary_key=True)\n    name = db.Column(db.String(200))\n    location = db.Column(db.String())\n    description = db.Column(db.String(500))\n    price_per_night = db.Column(db.Float())\n    images = db.Column(db.String())\n    amenities = db.Column(db.String())",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "class Review(db.Model, SerializerMixin):\n    __tablename__ = \"reviews\"\n    id = db.Column(db.Integer(), primary_key=True)\n    title = db.Column(db.String(100))\n    body = db.Column(db.String(500))\n    user_id = db.Column(db.Integer(), ForeignKey(\"users.id\"))\n    doghouse_id = db.Column(db.Integer(), ForeignKey(column=\"doghouses.id\"))\n    status = db.Column(db.String(150))\n    created_at = db.Column(db.DateTime(), default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime(), default=datetime.utcnow)",
        "detail": "server.models",
        "documentation": {}
    },
    {
        "label": "db",
        "kind": 5,
        "importPath": "server.models",
        "description": "server.models",
        "peekOfCode": "db = SQLAlchemy()\n# User Model\nclass User(db.Model, SerializerMixin):\n    __tablename__ = \"users\"\n    serialize_rules = \"-reviews.user\"\n    id = db.Column(db.Integer(), primary_key=True)\n    username = db.Column(db.String(250), nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(), nullable=False)\n    created_at = db.Column(db.DateTime(), default=datetime.utcnow)",
        "detail": "server.models",
        "documentation": {}
    }
]